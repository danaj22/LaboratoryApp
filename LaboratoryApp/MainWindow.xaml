<Window x:Class="LaboratoryApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:LaboratoryApp"
        xmlns:view="clr-namespace:LaboratoryApp.View"
        xmlns:vm="clr-namespace:LaboratoryApp.ViewModel"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"     
        mc:Ignorable="d"
        WindowStartupLocation="CenterScreen"
        
        Title="{Binding Title}" Height="600" Width="805">

    <Window.Resources>
        <ControlTemplate x:Key="errorTemplate">
            <DockPanel LastChildFill="true">
                <Border Background="OrangeRed" DockPanel.Dock="right"
                    Margin="3,0,0,0" Width="20" Height="20" CornerRadius="5"
                    ToolTip="{Binding ElementName=adoner,
                        Path=AdornedElement.(Validation.Errors)[0].ErrorContent}">
                    <TextBlock Text="!" VerticalAlignment="center" HorizontalAlignment="center"
                           FontWeight="Bold" Foreground="white" />
                </Border>
                <AdornedElementPlaceholder Name="adoner" VerticalAlignment="Center">
                    <Border BorderBrush="OrangeRed" BorderThickness="1" />
                </AdornedElementPlaceholder>
            </DockPanel>
        </ControlTemplate>
        <Style x:Key="textBoxError" TargetType="TextBox">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                        Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                        Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!-- To a treeView -->
        <!--<HierarchicalDataTemplate DataType="{x:Type local:client}"  ItemsSource="{Binding Children}">
            <Grid>
                <TextBlock Text="{Binding name}" />
            </Grid>
        </HierarchicalDataTemplate>

        <HierarchicalDataTemplate DataType="{x:Type local:office}"  ItemsSource="{Binding gauges}">
            <Grid>
                <TextBlock Text="{Binding name}" />
            </Grid>
        </HierarchicalDataTemplate>

        <HierarchicalDataTemplate DataType="{x:Type local:gauge}"  ItemsSource="{Binding}">
            <Grid>
                <TextBlock Text="{Binding model_of_gauges.model}" />
            </Grid>
        </HierarchicalDataTemplate>-->


        <DataTemplate DataType="{x:Type vm:InformationAboutClient}">
            <view:InformationAboutClientView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:InformationAboutOffice}">
            <view:InformationAboutOfficeView />
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:InformationAboutGauge}">
            <view:InformationAboutGaugeView />
        </DataTemplate>
        <vm:MainWindowViewModel x:Key="MainWindowViewModelDataSource"/>
    </Window.Resources>
    <Window.DataContext>
        <vm:MainWindowViewModel/>
    </Window.DataContext>
    <Grid>
        <Grid.Resources>
           
        </Grid.Resources>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="100"/>
            <ColumnDefinition Width="150"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition MinWidth="435"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" MinHeight="25"/>
            <RowDefinition Height="Auto" MinHeight="30"/>
            <RowDefinition Height="Auto" MinHeight="30"/>
            <RowDefinition Height="Auto" MinHeight="30"/>
            <RowDefinition Height="Auto" MinHeight="30"/>
            <RowDefinition Height="Auto" MinHeight="30"/>
            <RowDefinition Height="*" MinHeight="35"/>
        </Grid.RowDefinitions>


        <!--<Label Content="Data:" Grid.ColumnSpan="2" />
        <DatePicker Grid.Column="1"  FirstDayOfWeek="Monday"  />-->
        <Label Content="Temperatura:"  Grid.Row="1" VerticalAlignment="Center"/>
        <TextBox Grid.Column="1" Grid.Row="1" Width="145" VerticalAlignment="Center"
            Validation.ErrorTemplate="{StaticResource errorTemplate}"
         Style="{StaticResource textBoxError}" >

            <TextBox.Text>
                <Binding Path="Temperature" UpdateSourceTrigger="PropertyChanged" >
                    <Binding.ValidationRules>
                        <vm:CalibratorValidation ValidatesOnTargetUpdated="True"
                                     ValidationStep="RawProposedValue" />
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>
        <Label Content="Imię i Nazwisko:" Grid.Column="0" Grid.Row="2" VerticalAlignment="Center"/>
        <TextBox Grid.Column="1" Grid.Row="2" Width="145" VerticalAlignment="Center"
                 Validation.ErrorTemplate="{StaticResource errorTemplate}"
         Style="{StaticResource textBoxError}" >

            <TextBox.Text>
                <Binding Path="NameAndSurname" UpdateSourceTrigger="PropertyChanged" >
                    <Binding.ValidationRules>
                        <vm:NameValidation ValidatesOnTargetUpdated="True"
                                     ValidationStep="RawProposedValue"
                                     ErrorMessage="Wpisz imię i nazwisko [max. 100 znaków]." />
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>


        <TreeView Background="Bisque" Name="tvwAllClients" Grid.Row="5" Grid.RowSpan="2" ItemsSource="{Binding RootElement.Children,UpdateSourceTrigger=PropertyChanged}" 
                  vm:TreeViewHelper.SelectedItem="{Binding SelectedNode, Mode=TwoWay}" VirtualizingPanel.IsVirtualizing="True" Grid.Column="0" Grid.ColumnSpan="2">
            <TreeView.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
                      Color="Aquamarine" />
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}"
                      Color="Black" />
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}"
                      Color="Aquamarine" />
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}"
                      Color="Black" />
            </TreeView.Resources>
            <TreeView.ItemContainerStyle>
                <Style TargetType="TreeViewItem">
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
                    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
                    <!--<Setter Property="Background" Value="Khaki" />-->
                    <Setter Property="FontWeight" Value="Normal" />
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="FontWeight" Value="Bold"/>
                        </Trigger>
                    </Style.Triggers>

                </Style>
            </TreeView.ItemContainerStyle>
            <TreeView.ItemTemplate >

                <HierarchicalDataTemplate ItemsSource="{Binding Children}" >
                    <Grid>
                        <StackPanel Orientation="Horizontal">
                            <Image Width="20" Height="18" Stretch="Fill" Source="{Binding DisplayImagePath}"/>
                            <TextBlock Text="{Binding NameOfItem}"/>
                        </StackPanel>
                    </Grid>
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
        </TreeView>



        <!--<TreeView Name="tvwAllClients" ItemContainerStyle="{StaticResource ItemContainerStyle}" Grid.Row="4" Grid.RowSpan="2" ItemsSource="{Binding AllItems,UpdateSourceTrigger=PropertyChanged}" 
                  local:TreeViewHelper.SelectedItem="{Binding SelectedNode, Mode=TwoWay}" VirtualizingPanel.IsVirtualizing="True" Grid.Column="0" Grid.ColumnSpan="2">
            
            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate ItemsSource="{Binding offices}">
                    <TextBlock Text="{Binding name}"/>
                    <HierarchicalDataTemplate.ItemTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <TextBlock Text="{Binding name}"/>
                                <ItemsControl ItemsSource="{Binding gauges}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel Orientation="Vertical" />
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="miejsce 3"/>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </StackPanel>
                            -->
        <!--<HierarchicalDataTemplate.ItemTemplate>
                                <HierarchicalDataTemplate>
                                    <TextBlock Text="{Binding model_of_gauges.model}"/>
                                </HierarchicalDataTemplate>
                            </HierarchicalDataTemplate.ItemTemplate>-->
        <!--
                        </DataTemplate>
                    </HierarchicalDataTemplate.ItemTemplate>
                </HierarchicalDataTemplate>

            </TreeView.ItemTemplate>
        </TreeView>-->

        <ContentControl Background="LightBlue" Grid.RowSpan="2" Grid.Column="2" Grid.Row="5" Grid.ColumnSpan="2" Content="{Binding CurrentViewModel}">
        </ContentControl>
        <Button Content="Wyszukaj" Command="{Binding SearchCommand}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="3" Width="80"/>

        <vm:ModalDialogManager DataContext="{Binding MessageWindowClient}" IsOpen="{Binding IsOpen}" ToConfirm="{Binding ToConfirm}"  DialogHeight="400" 
			DialogWidth="390" DialogResizeMode="CanResize" />

        <vm:ModalDialogManager DataContext="{Binding MessageWindowModelOfGauge}" IsOpen="{Binding IsOpen}" ToConfirm="{Binding ToConfirm}"  DialogHeight="300" 
			DialogWidth="470" DialogResizeMode="CanResize"/>

        <TextBox Text="{Binding SearchItem}" Grid.Column="1" Grid.Row="3" VerticalAlignment="Center" Background="AliceBlue" Width="145" />
        <Button Content="Dodaj klienta" Command="{Binding AddNewClientCommand}" Grid.Column="3" HorizontalAlignment="Right"  VerticalAlignment="center" Width="123" />
        <Button Content="Dodaj model miernika" Command="{Binding AddNewGaugeCommand}" Grid.Row="1" Grid.Column="3" HorizontalAlignment="Right"  VerticalAlignment="center" />
        <RadioButton Content="Nr seryjny" IsChecked="{Binding IsCheckedSerial}" HorizontalAlignment="Left" Margin="10,9,0,0" Grid.Row="4" VerticalAlignment="Top"/>
        <RadioButton Content="NIP" IsChecked ="{Binding IsCheckedNip}" Grid.Column="1" HorizontalAlignment="Left" Margin="-9,9,0,0" Grid.Row="4" VerticalAlignment="Top"/>
        <RadioButton Content="Nazwa klienta" IsChecked="{Binding IsCheckedName}" Grid.Column="1" HorizontalAlignment="Left" Margin="60,9,0,0" Grid.Row="4" VerticalAlignment="Top"/>

        <!--<Button Content="Edytuj klienta" Grid.Column="3" Grid.Row="1" HorizontalAlignment="Right"  VerticalAlignment="center"/>
        <Button Content="Usuń klienta" Grid.Column="3" Grid.Row="2" HorizontalAlignment="Right"  VerticalAlignment="center"/>-->


    </Grid>
</Window>

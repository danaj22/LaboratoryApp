//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LaboratoryApp
{
    using System;
    using System.Collections.ObjectModel;

    public partial class client : ViewModel.MenuItem
    {
        public client()
        {
            this.gauges = new ObservableCollection<gauge>();
            this.offices = new ObservableCollection<office>();
        }

        public int clientId { get; set; }
        public string name { get; set; }
        public string adress { get; set; }
        public string contact_person_name { get; set; }
        public string mail { get; set; }
        public string tel { get; set; }
        public string NIP { get; set; }
        public string comments { get; set; }

        public virtual ObservableCollection<gauge> gauges { get; set; }
        public virtual ObservableCollection<office> offices { get; set; }

        protected override string displayImagePath
        {
            get
            {
                return @"C:\Users\daniel\Documents\Visual Studio 2013\Projects\LaboratoryApp\LaboratoryApp\icon\Office-Customer-Male-Light-icon.png";
            }
        }

        private bool isSelected;
        public bool IsSelected
        {
            get { return isSelected; }
            set
            {
                if (value != isSelected)
                {
                    isSelected = value;
                    this.OnPropertyChanged("IsSelected");
                }
            }
        }

        private bool isExpanded;
        public bool IsExpanded
        {
            get { return true; }
            set
            {
                if (value != isExpanded)
                {
                    isExpanded = value;
                    OnPropertyChanged("IsExpanded");
                }
            }
        }
    }
}
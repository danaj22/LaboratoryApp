<UserControl x:Class="LaboratoryApp.View.EditModelGauge"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:LaboratoryApp.View"
             xmlns:vm="clr-namespace:LaboratoryApp.ViewModel"
             mc:Ignorable="d" Height="104.533" Width="294.203">
    <UserControl.Resources>
        <ControlTemplate x:Key="errorTemplate">
            <DockPanel LastChildFill="true">
                <Border Background="OrangeRed" DockPanel.Dock="right"
                    Margin="3,0,0,0" Width="20" Height="20" CornerRadius="5"
                    ToolTip="{Binding ElementName=adoner,
                        Path=AdornedElement.(Validation.Errors)[0].ErrorContent}">
                    <TextBlock Text="!" VerticalAlignment="center" HorizontalAlignment="center"
                           FontWeight="Bold" Foreground="white" />
                </Border>
                <AdornedElementPlaceholder Name="adoner" VerticalAlignment="Center">
                    <Border BorderBrush="OrangeRed" BorderThickness="1" />
                </AdornedElementPlaceholder>
            </DockPanel>
        </ControlTemplate>
        <Style x:Key="ComboBoxError" TargetType="ComboBox">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                        Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                        Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="textBoxError" TargetType="TextBox">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                        Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                        Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

    </UserControl.Resources>


    <Grid >

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition/>

        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>

        </Grid.RowDefinitions>

        <Label Content="Producent: " HorizontalAlignment="Left" VerticalAlignment="Center"/>
        <Label Content="Model: " HorizontalAlignment="Left" Grid.Row="1" VerticalAlignment="Center"/>

        <ComboBox Name="ComboBoxManufacturer" ItemsSource="{Binding CollectionOfManufacturers}"
                  Grid.Column="1" Grid.RowSpan="1" Width="187" Height="25"
                  VerticalAlignment="Center" HorizontalAlignment="Left"
                  Validation.ErrorTemplate="{StaticResource errorTemplate}"
                  Style="{StaticResource ComboBoxError}">
            <ComboBox.SelectedItem>
                <Binding Path="SelectedManufacturer" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <vm:SelectedItemValidation ValidatesOnTargetUpdated="True"
                                     ValidationStep="RawProposedValue"
                                     ErrorMessage="Wybierz producenta."/>
                    </Binding.ValidationRules>
                </Binding>
            </ComboBox.SelectedItem>
        </ComboBox>
        <ComboBox Name="ComboBoxModel" ItemsSource="{Binding CollectionOfModels}"
                  Grid.Column="1" HorizontalAlignment="Left"  Grid.Row="1" 
                  VerticalAlignment="Center" Width="187" Height="25"
                  Validation.ErrorTemplate="{StaticResource errorTemplate}"
                  Style="{StaticResource ComboBoxError}">
            <ComboBox.SelectedItem>
                <Binding Path="SelectedModel" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <vm:SelectedItemValidation ValidatesOnTargetUpdated="True"
                                     ValidationStep="RawProposedValue"
                                     ErrorMessage="Wybierz model."/>
                    </Binding.ValidationRules>
                </Binding>
            </ComboBox.SelectedItem>
        </ComboBox>

        <vm:ModalDialogManager DataContext="{Binding MessageWindowModelOfGauge}" IsOpen="{Binding IsOpen}" ToConfirm="{Binding ToConfirm}"  DialogHeight="700" 
			DialogWidth="790" DialogResizeMode="CanResize" ScrollViewer.CanContentScroll="True"  ScrollViewer.HorizontalScrollBarVisibility="Auto"/>


        <Button Content="OK" Command="{Binding OKCommand}" HorizontalAlignment="Left" Margin="9,9,0,0" Grid.Row="3" VerticalAlignment="Top" Width="75" Grid.Column="1">
            <Button.Style>
                <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                    <Setter Property="IsEnabled" Value="false" />
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <Setter Property="IsEnabled" Value="true" />
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=ComboBoxModel,
                            Path=(Validation.HasError)}" Value="false" />
                                <Condition Binding="{Binding ElementName=ComboBoxManufacturer,
                            Path=(Validation.HasError)}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>

            </Button.Style>
        </Button>
        <Button Content="Cancel" Command="{Binding CancelCommand}" Grid.Column="1" HorizontalAlignment="Left" Margin="89,9,0,0" Grid.Row="3" VerticalAlignment="Top" Width="75"/>

    </Grid>
</UserControl>

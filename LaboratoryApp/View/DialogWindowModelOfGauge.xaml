<UserControl x:Class="LaboratoryApp.View.DialogWindowModelOfGauge"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:vm="clr-namespace:LaboratoryApp.ViewModel"
             xmlns:local="clr-namespace:LaboratoryApp"
             
             mc:Ignorable="d" Height="583" >
    <UserControl.Resources>
        <ControlTemplate x:Key="errorTemplate">
            <DockPanel LastChildFill="true">
                <Border Background="OrangeRed" DockPanel.Dock="right"
                    Margin="3,0,0,0" Width="20" Height="20" CornerRadius="5"
                    ToolTip="{Binding ElementName=adoner,
                        Path=AdornedElement.(Validation.Errors)[0].ErrorContent}">
                    <TextBlock Text="!" VerticalAlignment="center" HorizontalAlignment="center"
                           FontWeight="Bold" Foreground="white" />
                </Border>
                <AdornedElementPlaceholder Name="adoner" VerticalAlignment="Center">
                    <Border BorderBrush="OrangeRed" BorderThickness="1" />
                </AdornedElementPlaceholder>
            </DockPanel>
        </ControlTemplate>
        <Style x:Key="textBoxError" TargetType="TextBox">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                        Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                        Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ComboBoxError" TargetType="ComboBox">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                        Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                        Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Grid  >
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" MinWidth="32"/>
            <ColumnDefinition Width="450"/>
            <ColumnDefinition Width="29"/>
            <ColumnDefinition  MaxWidth="160"/>



        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="5"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="5"/>
            <RowDefinition  Height="Auto"/>
            <RowDefinition Height="5"/>
            <RowDefinition  Height="Auto"/>
            <RowDefinition Height="5"/>
            <RowDefinition  Height="Auto"/>
            <RowDefinition Height="5"/>
            <RowDefinition  Height="140"/>
            <RowDefinition Height="5"/>
            <RowDefinition  Height="110"/>
            <RowDefinition Height="5"/>
            <RowDefinition  Height="100"/>
            <RowDefinition  Height="Auto"/>
        </Grid.RowDefinitions>


        <Label Content="Producent: " Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Center" Height="26" Width="70"/>
        <Label Content="Model: " HorizontalAlignment="Left" Grid.Row="3" VerticalAlignment="Center" Height="26" Margin="0,24,0,2" Width="50"/>
        <Label Content="Zastosowanie: " HorizontalAlignment="Left" Grid.Row="5" VerticalAlignment="Center" Height="26" Margin="0,2,0,3" Width="88" />
        <Label Content="Typ: " HorizontalAlignment="Left" Grid.Row="7" VerticalAlignment="Center" Height="26"  Width="35" Margin="0,3,0,2"  />


        <!--<TextBox Name="TxtBoxManufacturer" 
                 Grid.Row="1" Grid.Column="1" Grid.RowSpan="1" Grid.ColumnSpan="1"
                 Validation.ErrorTemplate="{StaticResource errorTemplate}"
                 Style="{StaticResource textBoxError}">
            <TextBox.Text>
                <Binding Path="AboutModelOfGauge.ManufacturerName" UpdateSourceTrigger="PropertyChanged" >
                    <Binding.ValidationRules>
                        <vm:ModelOfGaugesValidation ValidatesOnTargetUpdated="True"
                                     ValidationStep="RawProposedValue"
                                     ErrorMessage="Wpisz producenta [max. 50 znaków]." />
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>-->
        <TextBox Name="TxtBoxModel"  
                 Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="1" 
                 Validation.ErrorTemplate="{StaticResource errorTemplate}"
                 Style="{StaticResource textBoxError}" >
            <TextBox.Text>
                <Binding Path="AboutModelOfGauge.Model" UpdateSourceTrigger="PropertyChanged" >
                    <Binding.ValidationRules>
                        <vm:ModelOfGaugesValidation ValidatesOnTargetUpdated="True"
                                     ValidationStep="RawProposedValue"
                                     ErrorMessage="Wpisz model [max. 50 znaków]." />
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>
        <!--<ListBox ItemsSource="{Binding AboutModelOfGauge.CollectionOfUsage}"  SelectedItem="{Binding SelectedUsage}" Grid.Row="2" Grid.Column="1"  Grid.RowSpan="1" Grid.ColumnSpan="1" >
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding description}"/>
                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>-->
        <ComboBox Name="ComboBoxUsage" ItemsSource="{Binding AboutModelOfGauge.CollectionOfUsage}"  
                  Grid.Row="5" Grid.Column="1"  Grid.RowSpan="1" Grid.ColumnSpan="1" 
                  Validation.ErrorTemplate="{StaticResource errorTemplate}"
                  Style="{StaticResource ComboBoxError}">
            <ComboBox.SelectedItem>
                <Binding Path="AboutModelOfGauge.SelectedUsage" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <vm:SelectedItemValidation ValidatesOnTargetUpdated="True"
                                     ValidationStep="RawProposedValue"
                                     ErrorMessage="Wybierz zastosowanie."/>
                    </Binding.ValidationRules>
                </Binding>
            </ComboBox.SelectedItem>
        </ComboBox>

        <ComboBox Name="ComboBoxType" ItemsSource="{Binding AboutModelOfGauge.CollectionOfType}"
                  Grid.Row="7" Grid.Column="1" Grid.RowSpan="1" 
                  Grid.ColumnSpan="1"  
                  Validation.ErrorTemplate="{StaticResource errorTemplate}"
                  Style="{StaticResource ComboBoxError}">
            <ComboBox.SelectedItem>
                <Binding Path="AboutModelOfGauge.SelectedType" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <vm:SelectedItemValidation ValidatesOnTargetUpdated="True"
                                     ValidationStep="RawProposedValue"
                                     ErrorMessage="Wybierz typ."/>
                    </Binding.ValidationRules>
                </Binding>
            </ComboBox.SelectedItem>
        </ComboBox>

        <vm:ModalDialogManager DataContext="{Binding MessageWindowTable1}" IsOpen="{Binding IsOpen}" ToConfirm="{Binding ToConfirm}"  DialogHeight="600" 
			DialogWidth="900" DialogResizeMode="CanResize" />
        <vm:ModalDialogManager DataContext="{Binding MessageWindowTable2}" IsOpen="{Binding IsOpen}" ToConfirm="{Binding ToConfirm}"  DialogHeight="600" 
			DialogWidth="900" DialogResizeMode="CanResize" />
        <vm:ModalDialogManager DataContext="{Binding MessageWindowTable3}" IsOpen="{Binding IsOpen}" ToConfirm="{Binding ToConfirm}"  DialogHeight="600" 
			DialogWidth="890" DialogResizeMode="CanResize" />
        <vm:ModalDialogManager DataContext="{Binding MessageWindowTable4}" IsOpen="{Binding IsOpen}" ToConfirm="{Binding ToConfirm}"  DialogHeight="600" 
			DialogWidth="950" DialogResizeMode="CanResize" />
        <vm:ModalDialogManager DataContext="{Binding MessageWindowTable5}" IsOpen="{Binding IsOpen}" ToConfirm="{Binding ToConfirm}"  DialogHeight="600" 
			DialogWidth="950" DialogResizeMode="CanResize" />
        <vm:ModalDialogManager DataContext="{Binding MessageWindowTable6}" IsOpen="{Binding IsOpen}" ToConfirm="{Binding ToConfirm}"  DialogHeight="600" 
			DialogWidth="820" DialogResizeMode="CanResize" />
        <vm:ModalDialogManager DataContext="{Binding MessageWindowTable7}" IsOpen="{Binding IsOpen}" ToConfirm="{Binding ToConfirm}"  DialogHeight="600" 
			DialogWidth="890" DialogResizeMode="CanResize" />
        <vm:ModalDialogManager DataContext="{Binding MessageWindowTable8}" IsOpen="{Binding IsOpen}" ToConfirm="{Binding ToConfirm}"  DialogHeight="600" 
			DialogWidth="890" DialogResizeMode="CanResize" />
        <vm:ModalDialogManager DataContext="{Binding MessageWindowTable9}" IsOpen="{Binding IsOpen}" ToConfirm="{Binding ToConfirm}"  DialogHeight="600" 
			DialogWidth="890" DialogResizeMode="CanResize" />
        <vm:ModalDialogManager DataContext="{Binding MessageWindowTable10}" IsOpen="{Binding IsOpen}" ToConfirm="{Binding ToConfirm}"  DialogHeight="430" 
			DialogWidth="900" DialogResizeMode="CanResize" />
        <vm:ModalDialogManager DataContext="{Binding MessageWindowTable11}" IsOpen="{Binding IsOpen}" ToConfirm="{Binding ToConfirm}"  DialogHeight="600" 
			DialogWidth="890" DialogResizeMode="CanResize" />
        <!--<vm:ModalDialogManager DataContext="{Binding MessageWindowTable12}" IsOpen="{Binding IsOpen}" ToConfirm="{Binding ToConfirm}"  DialogHeight="600" 
			DialogWidth="820" DialogResizeMode="CanResize" />
        <vm:ModalDialogManager DataContext="{Binding MessageWindowTable13}" IsOpen="{Binding IsOpen}" ToConfirm="{Binding ToConfirm}"  DialogHeight="600" 
			DialogWidth="820" DialogResizeMode="CanResize" />-->
        <vm:ModalDialogManager DataContext="{Binding MessageWindowTable14}" IsOpen="{Binding IsOpen}" ToConfirm="{Binding ToConfirm}"  DialogHeight="600" 
			DialogWidth="820" DialogResizeMode="CanResize" />
        <vm:ModalDialogManager DataContext="{Binding MessageWindowTable15}" IsOpen="{Binding IsOpen}" ToConfirm="{Binding ToConfirm}"  DialogHeight="600" 
			DialogWidth="1300" DialogResizeMode="CanResize" />
        <vm:ModalDialogManager DataContext="{Binding MessageWindowTable16}" IsOpen="{Binding IsOpen}" ToConfirm="{Binding ToConfirm}"  DialogHeight="600" 
			DialogWidth="1300" DialogResizeMode="CanResize" />
        <vm:ModalDialogManager DataContext="{Binding MessageWindowTable17}" IsOpen="{Binding IsOpen}" ToConfirm="{Binding ToConfirm}"  DialogHeight="600" 
			DialogWidth="1020" DialogResizeMode="CanResize" />
        <vm:ModalDialogManager DataContext="{Binding MessageWindowTable18}" IsOpen="{Binding IsOpen}" ToConfirm="{Binding ToConfirm}"  DialogHeight="600" 
			DialogWidth="1140" DialogResizeMode="CanResize" />


        <vm:ModalDialogManager DataContext="{Binding MessageWindowType}" IsOpen="{Binding IsOpen}" ToConfirm="{Binding ToConfirm}"  DialogHeight="200" 
			DialogWidth="340" DialogResizeMode="CanResize" Grid.Row="1" />
        <vm:ModalDialogManager DataContext="{Binding MessageWindowManufacturer}" IsOpen="{Binding IsOpen}" ToConfirm="{Binding ToConfirm}"  DialogHeight="200" 
			DialogWidth="370" DialogResizeMode="CanResize" Grid.Row="1" />

        <vm:ModalDialogManager DataContext="{Binding MessageWindowUsage}" IsOpen="{Binding IsOpen}" ToConfirm="{Binding ToConfirm}" DialogHeight="300" 
			DialogWidth="600" DialogResizeMode="CanResize" Grid.Row="1"/>
        <vm:ModalDialogManager DataContext="{Binding MessageWindowCalibrator}" IsOpen="{Binding IsOpen}" ToConfirm="{Binding ToConfirm}"  DialogHeight="200" 
			DialogWidth="370" DialogResizeMode="CanResize" Grid.Row="1" />
        <vm:ModalDialogManager DataContext="{Binding MessageWindowFunction}" IsOpen="{Binding IsOpen}" ToConfirm="{Binding ToConfirm}"  DialogHeight="200" 
			DialogWidth="370" DialogResizeMode="CanResize" Grid.Row="1" />
        <vm:ModalDialogManager DataContext="{Binding MessageWindowTable}" IsOpen="{Binding IsOpen}" ToConfirm="{Binding ToConfirm}"  DialogHeight="600" 
			DialogWidth="370" DialogResizeMode="CanResize" Grid.Row="1" />


        <Button Content="OK" Command="{Binding OKCommand}" HorizontalAlignment="Left" Grid.Row="14" VerticalAlignment="Center" Width="75" Grid.Column="1" Height="22" Margin="0,8,0,20">
            <Button.Style>
                <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                    <Setter Property="IsEnabled" Value="false" />
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <Setter Property="IsEnabled" Value="true" />
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=ComboBoxManufacturer,
                            Path=(Validation.HasError)}" Value="false" />
                                <Condition Binding="{Binding ElementName=TxtBoxModel,
                            Path=(Validation.HasError)}" Value="false"/>
                                <Condition Binding="{Binding ElementName=ComboBoxUsage,
                            Path=(Validation.HasError)}" Value="false"/>
                                <Condition Binding="{Binding ElementName=ComboBoxType,
                            Path=(Validation.HasError)}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <Button Content="Cancel" Command="{Binding CancelCommand}" Grid.Column="1" HorizontalAlignment="Right" Grid.Row="14" VerticalAlignment="Center" Width="75" Height="26" Margin="0,6,0,17"/>
        <Button Content="Dodaj zastosowanie" Command="{Binding AddUsageCommand}" Grid.Column="3" Grid.Row="5"/>
        <Button Content="Dodaj typ" Command="{Binding AddTypeCommand}" Grid.Column="3" Grid.Row="7" />
        <Button Content="Dodaj Kalibrator" Command="{Binding AddCalibratorCommand}" Grid.Column="3" Grid.Row="13" />
        <Button Content="Dodaj funkcje" Command="{Binding AddFunctionCommand}" Grid.Column="3"  Grid.Row="11" />
        <Button Content="Dodaj tabelę" Command="{Binding AddTableCommand}" Grid.Column="3" Grid.Row="9" Margin="0,0,0,86"  />

        <ListBox Grid.Column="1" Grid.Row="13" ItemsSource="{Binding CollectionOfCalibrators}" ScrollViewer.HorizontalScrollBarVisibility="Visible" ScrollViewer.VerticalScrollBarVisibility="Visible" >
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <CheckBox IsChecked="{Binding IsChecked}" Content="{Binding name}"/>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        <Label Content="Kalibratory: " HorizontalAlignment="Left" Grid.Row="13" VerticalAlignment="Center"  Margin="15,52,0,52" Height="26" Width="73"  />
        <Label Content="Sprawdzone funkcje: " HorizontalAlignment="Left" Grid.Row="11" VerticalAlignment="Center"  Margin="10,24,0,26" Height="26" Width="122"  />
        <ListBox Grid.Column="1" Grid.Row="11" ItemsSource="{Binding CollectionOfCheckedFunction}" ScrollViewer.HorizontalScrollBarVisibility="Visible" ScrollViewer.VerticalScrollBarVisibility="Visible" Grid.RowSpan="1" Grid.ColumnSpan="1" >
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <CheckBox IsChecked="{Binding IsChecked}" Content="{Binding name}"/>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        <Label Content="Tabele: " HorizontalAlignment="Left" Grid.Row="9" VerticalAlignment="Center"  Margin="10,22,0,29" Height="26" Width="122"  />
        <ListBox Grid.Column="1"  Grid.Row="9" SelectedItem="{Binding SelectedTable}" ScrollViewer.VerticalScrollBarVisibility="Visible" ScrollViewer.HorizontalScrollBarVisibility="Visible" ItemsSource="{Binding ListOfNamesOfTables}"  >
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <CheckBox IsChecked="{Binding IsChecked}" Content="{Binding Name}"/>

                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>


        <Button Content="Usuń zaznaczoną tabelę" Command="{Binding DeleteTableCommand}" Grid.Column="3" Grid.Row="9" Margin="0,102,0,0"  />
        <Button Content="Edytuj zaznaczoną tabelę" Command="{Binding EditTableCommand}" Grid.Column="3" Grid.Row="9" Margin="0,59,0,43"  />

        <ComboBox Name="ComboBoxManufacturer" ItemsSource="{Binding CollectionOfManufacturers}"
                  Grid.Column="1" Grid.RowSpan="1" Width="250" Height="25"
                  VerticalAlignment="Center" HorizontalAlignment="Left"
                  Validation.ErrorTemplate="{StaticResource errorTemplate}"
                  Style="{StaticResource ComboBoxError}" Margin="0,10,0,7" Grid.Row="1">
            <ComboBox.SelectedItem>
                <Binding Path="SelectedManufacturer" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <vm:SelectedItemValidation ValidatesOnTargetUpdated="True"
                                     ValidationStep="RawProposedValue"
                                     ErrorMessage="Wybierz producenta."/>
                    </Binding.ValidationRules>
                </Binding>
            </ComboBox.SelectedItem>
        </ComboBox>

        <Button Content="Dodaj producenta" Command="{Binding AddManufacturerCommand}" Grid.Column="1" Grid.Row="1" Margin="295,10,0,7" />

    </Grid>
</UserControl>

<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:vm="clr-namespace:LaboratoryApp.ViewModel"
            x:Class="LaboratoryApp.View.DialogWindowTable10" 
             mc:Ignorable="d" Height="439" Width="899">
    <UserControl.Resources>
        <ControlTemplate x:Key="errorTemplate">
            <DockPanel LastChildFill="true">
                <Border Width="20" ToolTip="{Binding AdornedElement.(Validation.Errors)[0].ErrorContent, ElementName=adoner}" Margin="3,0,0,0" Height="20" DockPanel.Dock="right" CornerRadius="5" Background="OrangeRed">
                    <TextBlock VerticalAlignment="center" Text="!" HorizontalAlignment="center" FontWeight="Bold" Foreground="white"/>
                </Border>
                <AdornedElementPlaceholder x:Name="adoner" VerticalAlignment="Center">
                    <Border BorderBrush="OrangeRed" BorderThickness="1"/>
                </AdornedElementPlaceholder>
            </DockPanel>
        </ControlTemplate>
        <Style x:Key="textBoxError" TargetType="{x:Type TextBox}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip" Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={x:Static RelativeSource.Self}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <vm:MyConverter x:Key="MyConverter"/>
    </UserControl.Resources>
    <Grid >
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="40"/>
            <ColumnDefinition Width="60"/>
            <ColumnDefinition Width="40"/>
            <ColumnDefinition Width="60"/>
            <ColumnDefinition Width="100"/>
            <ColumnDefinition Width="125"/>
            <ColumnDefinition Width="100"/>
            <ColumnDefinition Width="100"/>
            <ColumnDefinition Width="150"/>
            <ColumnDefinition Width="150"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="40"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <DataGrid AutoGenerateColumns="False" ItemsSource="{Binding Tab}" Grid.ColumnSpan="10" Grid.RowSpan="6" CanUserAddRows="True" HorizontalAlignment="Left" Margin="9,80,0,0" VerticalAlignment="Top" Height="348">
            <DataGrid.Columns>
                <DataGridTextColumn HeaderStyle="{StaticResource WrappedColumnHeaderStyle}" Width="88" Header="Sinusoidalny prąd dotykowy zaczynający się od dodatniej połówki [mA]" Binding="{Binding Path=Multiples , Converter={StaticResource MyConverter}}" />
                <DataGridTextColumn HeaderStyle="{StaticResource WrappedColumnHeaderStyle}" Width="80" Header="Oporność symulująca oporność uziemienia [Ω]" Binding="{Binding Path=SymulatedResistance, Converter={StaticResource MyConverter}}" />
                <DataGridTextColumn HeaderStyle="{StaticResource WrappedColumnHeaderStyle}" Width="30" Header="Przedrostek" Binding="{Binding Path=Prefix, Converter={StaticResource MyConverter}}" />
                <DataGridTextColumn HeaderStyle="{StaticResource WrappedColumnHeaderStyle}" Width="80" Header="Mierzona wartość napięcia dotykowego na mierniku sprawdzanym [V]" Binding="{Binding Path=MeasureValue, Converter={StaticResource MyConverter}}" >
                    <DataGridTextColumn.CellStyle>
                        <Style>
                            <Setter Property="Border.Background" Value="{Binding ColorResult}" />
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn HeaderStyle="{StaticResource WrappedColumnHeaderStyle}" Width="80" Header="Mierzona wartość napięcia dotykowego na mierniku kontrolnym [V]" Binding="{Binding Path=IdealValue, Converter={StaticResource MyConverter}}" />
                <DataGridTextColumn HeaderStyle="{StaticResource WrappedColumnHeaderStyle}" Width="80" Header="Oporność uziemienia na mierniku sprawdzanym [Ω]" Binding="{Binding Path=ResistanceMeasure, Converter={StaticResource MyConverter}}" />
                <DataGridTextColumn HeaderStyle="{StaticResource WrappedColumnHeaderStyle}" Width="80" Header="Dopuszczalna dolna wartość limitu błędu mierzonego napięcia [V]" Binding="{Binding Path=DownMeasureError, Converter={StaticResource MyConverter}}" />
                <DataGridTextColumn HeaderStyle="{StaticResource WrappedColumnHeaderStyle}" Width="80" Header="Dopuszczalna górna wartość limitu błędu mierzonego napięcia [V]" Binding="{Binding Path=UpMeasureError, Converter={StaticResource MyConverter}}" />
                <DataGridTextColumn HeaderStyle="{StaticResource WrappedColumnHeaderStyle}" Width="80" Header="Niepewność całkowita rozszerzona typu (B) pomiaru napięcia ±2S(x) [V]" Binding="{Binding Path=ErrorInValue, Converter={StaticResource MyConverter}}" />
                <DataGridTextColumn HeaderStyle="{StaticResource WrappedColumnHeaderStyle}" Width="80" Header="Niepewność całkowita rozszerzona typu (B) pomiaru napięcia ±2S(x)" Binding="{Binding Path=ErrorInPercent, Converter={StaticResource MyConverter}}" />
            </DataGrid.Columns>
        </DataGrid>
        <Label Content="%" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="1" Grid.Column="0"/>
        <Label Content="Stała " HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="1" Grid.Column="2"/>
        <TextBox HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" Grid.Row="1" Grid.Column="1" Text="{Binding Path=Percent, Converter={StaticResource MyConverter}}" VerticalAlignment="Center" Width="37"/>
        <TextBox HorizontalAlignment="Left" Height="23"  TextWrapping="Wrap" Grid.Row="1" Grid.Column="3" Text="{Binding Path=Constant, Converter={StaticResource MyConverter}}" VerticalAlignment="Center" Width="39"/>
        <Label Content="Liczb znaczących" Grid.Row="1" Grid.Column="4" HorizontalAlignment="Center" VerticalAlignment="Center"/>
        <TextBox HorizontalAlignment="Center" Height="23" Grid.Row="1" Grid.Column="5" TextWrapping="Wrap" Text="{Binding Path=ImportantNumber, Converter={StaticResource MyConverter}}" VerticalAlignment="Center" Width="120"/>
        <Button Content="Cancel"  Command="{Binding CancelCommand}" HorizontalAlignment="Center" Grid.Column="9" Grid.Row="2" VerticalAlignment="Top" Width="76" Margin="36,76,38,0"/>

        <Button Width="75" VerticalAlignment="Top"  HorizontalAlignment="Center" Command="{Binding OKCommand}" Content="OK" Grid.Column="9" Grid.Row="2" >
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="IsEnabled" Value="false"/>
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding (Validation.HasError), ElementName=TxtBoxFunction}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="IsEnabled" Value="true"/>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <Label Width="79" VerticalAlignment="Top" Margin="454,48,0,0" HorizontalAlignment="Left" Content="Nazwa tabeli"/>

        <TextBox x:Name="TxtBoxFunction" HorizontalAlignment="Left" Height="23" Grid.Column="7" Grid.ColumnSpan="3" Grid.Row="1" TextWrapping="Wrap" VerticalAlignment="Top" Width="291"
			Validation.ErrorTemplate="{StaticResource errorTemplate}" AcceptsReturn="True"
			HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto"  
			Style="{StaticResource textBoxError}" >
            <Binding Path="NameOfFile" UpdateSourceTrigger="PropertyChanged" >
                <Binding.ValidationRules>
                    <vm:FunctionValidation ValidatesOnTargetUpdated="True"
						ValidationStep="RawProposedValue"/>
                </Binding.ValidationRules>
            </Binding>
        </TextBox>
        <Label Content="%" HorizontalAlignment="Center" Grid.Row="0" Grid.Column="0" VerticalAlignment="Center" Width="21"/>
        <Label Content="Stała " HorizontalAlignment="Left" Grid.Row="0" Grid.Column="2" VerticalAlignment="Center" Width="40"/>
        <TextBox HorizontalAlignment="Left" Height="23" Grid.Row="0" Grid.Column="1" TextWrapping="Wrap" Text="{Binding Path=PercentIdeal, Converter={StaticResource MyConverter}}" VerticalAlignment="Center" Width="39"/>
        <TextBox HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" Grid.Row="0" Grid.Column="3" Text="{Binding Path=ConstantIdeal, Converter={StaticResource MyConverter}}" VerticalAlignment="Center" Width="48"/>
        <Label Content="Liczb znaczących " HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Row="0" Grid.Column="4" Width="104"/>
        <TextBox HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" Text="{Binding Path=ImportantNumberIdeal, Converter={StaticResource MyConverter}}" Grid.Row="0" Grid.Column="5" VerticalAlignment="Center" Width="86"/>

    </Grid>
</UserControl>
